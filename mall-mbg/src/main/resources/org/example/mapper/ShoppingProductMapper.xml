<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.ShoppingProductMapper">
  <resultMap id="BaseResultMap" type="org.example.model.ShoppingProduct">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="packing_unit" jdbcType="VARCHAR" property="packingUnit" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, code, price, count, status, create_date, detail, packing_unit, brand_name, 
    category_name
  </sql>
  
  <select id="getProductNum" resultType="java.lang.Integer">
    SELECT count(id) FROM shopping_product;
  </select>

  <select id="selectShoppingProductByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shopping_product
    where id in
    <foreach collection="array" item="productid" index="index"
             open="(" close=")" separator=",">
      #{productid}
    </foreach>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shopping_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shopping_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.example.model.ShoppingProduct">
    insert into shopping_product (id, name, code, 
      price, count, status, 
      create_date, detail, packing_unit, 
      brand_name, category_name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{count,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createDate,jdbcType=DATE}, #{detail,jdbcType=VARCHAR}, #{packingUnit,jdbcType=VARCHAR}, 
      #{brandName,jdbcType=VARCHAR}, #{categoryName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.model.ShoppingProduct">
    insert into shopping_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="packingUnit != null">
        packing_unit,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="packingUnit != null">
        #{packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.ShoppingProduct">
    update shopping_product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="packingUnit != null">
        packing_unit = #{packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.model.ShoppingProduct">
    update shopping_product
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      count = #{count,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=DATE},
      detail = #{detail,jdbcType=VARCHAR},
      packing_unit = #{packingUnit,jdbcType=VARCHAR},
      brand_name = #{brandName,jdbcType=VARCHAR},
      category_name = #{categoryName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>